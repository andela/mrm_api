"""fix migration errors

Revision ID: 92ff7a21ddea
Revises: 93beb9b3a42d
Create Date: 2019-06-06 12:10:55.850449

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '92ff7a21ddea'
down_revision = '93beb9b3a42d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('locations_structure_id_fkey', 'locations', type_='foreignkey')
    op.drop_index('ix_structure_name', table_name='structure')
    op.drop_index('structure_level_idx', table_name='structure')
    op.drop_index('structure_lft_idx', table_name='structure')
    op.drop_index('structure_rgt_idx', table_name='structure')
    op.add_column('events', sa.Column('app_booking', sa.Boolean(), nullable=True))
    op.add_column('events', sa.Column('auto_cancelled', sa.Boolean(), nullable=True))
    op.drop_column('locations', 'structure_id')
    op.add_column('office_structures', sa.Column('state', sa.Enum('active', 'archived', 'deleted', name='statetype'), nullable=True))
    op.create_unique_constraint(None, 'office_structures', ['structure_id'])
    op.drop_column('resources', 'quantity')
    op.alter_column('responses', 'resolved',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.add_column('room_resources', sa.Column('name', sa.String(), nullable=True))
    op.add_column('rooms', sa.Column('structure_id', sa.String(), nullable=True))
    op.drop_table('structure')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('rooms', 'structure_id')
    op.drop_column('room_resources', 'name')
    op.alter_column('responses', 'resolved',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.add_column('resources', sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'office_structures', type_='unique')
    op.drop_column('office_structures', 'state')
    op.drop_column('events', 'auto_cancelled')
    op.drop_column('events', 'app_booking')
    op.create_table('structure',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lft', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rgt', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tree_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['structure.id'], name='structure_parent_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name='structure_tag_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='structure_pkey')
    )
    op.create_index('structure_rgt_idx', 'structure', ['rgt'], unique=False)
    op.create_index('structure_lft_idx', 'structure', ['lft'], unique=False)
    op.create_index('structure_level_idx', 'structure', ['level'], unique=False)
    op.create_index('ix_structure_name', 'structure', ['name'], unique=True)
    op.add_column('locations', sa.Column('structure_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('locations_structure_id_fkey', 'locations', 'structure', ['structure_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###
